/* Links that point to a location on the same page will scroll
 * smoothly down to that location. */
html {
  scroll-behavior: smooth;
}

/* Hide content visually, but allow screen readers to read the
 * content. Note that for Accessibility guidelines, this content
 * must become visible if toggled over using a keyboard. */
.visually-hidden:not(:focus):not(:active),
.sr-only:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
          clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

/* Give the hidden attribute most priority - fixes issue where
 * an html element can be marked as hidden but is still visible.
 * Use aria-hidden="true" to hide visual elements from
 * screen readers. */
[hidden] {
  display: none !important;
}

/* Ensures disabled elements do not accept events */
[disabled] {
  pointer-events: none !important;
  cursor: not-allowed !important;
}

/* Use primary color for focus styles */
:focus-visible {
  outline-color: var(--color-accent);
  outline-offset: 3px;
  outline-width: 2px;
}

/* Adds a margin above an element when it is the target of an ID link */
* {
  scroll-margin-top: var(--flow-space);
  scroll-margin-bottom: var(--flow-space);
}

/* Clearfix if you still need that sort of thing */
.clearfix:after {
  content: "";
  display: table;
  clear: both;
}

/* Utility to make any element cover the area of it's parent.
 * You will have to give the parent { position: relative; } though */
.cover {
  position: absolute;
  inset: 0;
  -o-object-fit: cover;
     object-fit: cover;
}

/* Center utility */
.center {
  display: grid;
  place-items: center;
} 